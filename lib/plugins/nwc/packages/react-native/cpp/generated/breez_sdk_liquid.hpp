// This file was autogenerated by some hot garbage in the
// `uniffi-bindgen-react-native` crate. Trust me, you don't want to mess with
// it!
#pragma once
#include "UniffiCallInvoker.h"
#include <ReactCommon/CallInvoker.h>
#include <iostream>
#include <jsi/jsi.h>
#include <map>
#include <memory>

namespace react = facebook::react;
namespace jsi = facebook::jsi;

class NativeBreezSdkLiquid : public jsi::HostObject {
private:
  // For calling back into JS from Rust.
  std::shared_ptr<uniffi_runtime::UniffiCallInvoker> callInvoker;

protected:
  std::map<std::string, jsi::Value> props;
  jsi::Value cpp_uniffi_internal_fn_func_ffi__string_to_byte_length(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_func_ffi__string_to_arraybuffer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_func_ffi__arraybuffer_to_string(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_clone_bindingliquidsdk(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_free_bindingliquidsdk(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_accept_payment_proposed_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_add_event_listener(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_backup(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_buy_bitcoin(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_check_message(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_create_bolt12_invoice(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_disconnect(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_fiat_rates(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_lightning_limits(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_onchain_limits(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_payment_proposed_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_get_info(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_get_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_fiat_currencies(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_payments(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_refundables(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_auth(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_pay(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_withdraw(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_parse(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_pay_onchain(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_buy_bitcoin(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_lnurl_pay(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_pay_onchain(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_receive_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_refund(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_send_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_receive_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_recommended_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_refund(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_register_webhook(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_remove_event_listener(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_rescan_onchain_swaps(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_restore(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_send_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_sign_message(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_sync(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_unregister_webhook(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_clone_plugineventemitter(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_free_plugineventemitter(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_plugineventemitter_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_clone_pluginstorage(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_free_pluginstorage(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_get_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_remove_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_set_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_func_connect(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_func_connect_with_signer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_func_default_config(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_func_parse_invoice(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_fn_func_set_logger(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_func_connect(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_func_connect_with_signer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_func_default_config(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_func_parse_invoice(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_func_set_logger(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_accept_payment_proposed_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_add_event_listener(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_backup(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_buy_bitcoin(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_check_message(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_create_bolt12_invoice(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_disconnect(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_fiat_rates(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_lightning_limits(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_onchain_limits(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_payment_proposed_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_get_info(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_get_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_fiat_currencies(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_payments(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_refundables(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_auth(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_pay(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_withdraw(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_parse(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_pay_onchain(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_buy_bitcoin(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_lnurl_pay(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_pay_onchain(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_receive_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_refund(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_send_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_receive_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_recommended_fees(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_refund(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_register_webhook(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_remove_event_listener(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_rescan_onchain_swaps(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_restore(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_send_payment(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_sign_message(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_sync(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_unregister_webhook(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_plugineventemitter_broadcast(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_get_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_remove_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_set_item(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_eventlistener_on_event(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_logger_log(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_id(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_on_start(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_on_stop(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_xpub(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_derive_xpub(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_sign_ecdsa(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_sign_ecdsa_recoverable(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_slip77_master_blinding_key(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_hmac_sha256(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_ecies_encrypt(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_ecies_decrypt(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_ffi_breez_sdk_liquid_bindings_uniffi_contract_version(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_eventlistener(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_logger(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_plugin(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_signer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_bindingliquidsdk_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value
  cpp_uniffi_internal_fn_method_plugineventemitter_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);
  jsi::Value cpp_uniffi_internal_fn_method_pluginstorage_ffi__bless_pointer(
      jsi::Runtime &rt, const jsi::Value &thisVal, const jsi::Value *args,
      size_t count);

public:
  NativeBreezSdkLiquid(
      jsi::Runtime &rt,
      std::shared_ptr<uniffi_runtime::UniffiCallInvoker> callInvoker);
  virtual ~NativeBreezSdkLiquid();

  /**
   * The entry point into the crate.
   *
   * React Native must call `NativeBreezSdkLiquid.registerModule(rt,
   * callInvoker)` before using the Javascript interface.
   */
  static void registerModule(jsi::Runtime &rt,
                             std::shared_ptr<react::CallInvoker> callInvoker);

  /**
   * Some cleanup into the crate goes here.
   *
   * Current implementation is empty, however, this is not guaranteed to always
   * be the case.
   *
   * Clients should call `NativeBreezSdkLiquid.unregisterModule(rt)` after final
   * use where possible.
   */
  static void unregisterModule(jsi::Runtime &rt);

  virtual jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &name);
  virtual void set(jsi::Runtime &rt, const jsi::PropNameID &name,
                   const jsi::Value &value);
  virtual std::vector<jsi::PropNameID> getPropertyNames(jsi::Runtime &rt);
};