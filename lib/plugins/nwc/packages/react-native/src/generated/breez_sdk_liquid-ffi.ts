// This file was autogenerated by some hot garbage in the `uniffi-bindgen-react-native` crate.
// Trust me, you don't want to mess with it!

import {
  type StructuralEquality as UniffiStructuralEquality,
  type UniffiForeignFuture as RuntimeUniffiForeignFuture,
  type UniffiRustCallStatus,
  type UniffiRustArcPtr,
  type UniffiRustFutureContinuationCallback as RuntimeUniffiRustFutureContinuationCallback,
  type UniffiResult,
} from 'uniffi-bindgen-react-native';

interface NativeModuleInterface {
  ubrn_uniffi_internal_fn_func_ffi__string_to_byte_length(
    string: string,
    uniffi_out_err: UniffiRustCallStatus
  ): number;
  ubrn_uniffi_internal_fn_func_ffi__string_to_arraybuffer(
    string: string,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_internal_fn_func_ffi__arraybuffer_to_string(
    buffer: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): string;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_clone_bindingliquidsdk(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_free_bindingliquidsdk(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_accept_payment_proposed_fees(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_add_event_listener(
    ptr: bigint,
    listener: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_backup(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_buy_bitcoin(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_check_message(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_create_bolt12_invoice(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_disconnect(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_fiat_rates(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_lightning_limits(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_onchain_limits(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_fetch_payment_proposed_fees(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_get_info(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_get_payment(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_fiat_currencies(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_payments(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_list_refundables(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_auth(
    ptr: bigint,
    reqData: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_pay(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_lnurl_withdraw(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_parse(
    ptr: bigint,
    input: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_pay_onchain(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_buy_bitcoin(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_lnurl_pay(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_pay_onchain(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_receive_payment(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_refund(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_prepare_send_payment(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_receive_payment(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_recommended_fees(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_refund(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_register_webhook(
    ptr: bigint,
    webhookUrl: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_remove_event_listener(
    ptr: bigint,
    id: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_rescan_onchain_swaps(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_restore(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_send_payment(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_sign_message(
    ptr: bigint,
    req: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_sync(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_bindingliquidsdk_unregister_webhook(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_clone_plugineventemitter(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_free_plugineventemitter(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_plugineventemitter_broadcast(
    ptr: bigint,
    event: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_clone_pluginstorage(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_free_pluginstorage(
    ptr: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_get_item(
    ptr: bigint,
    key: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_remove_item(
    ptr: bigint,
    key: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_method_pluginstorage_set_item(
    ptr: bigint,
    key: Uint8Array,
    value: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_func_connect(
    req: Uint8Array,
    plugins: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_func_connect_with_signer(
    req: Uint8Array,
    signer: bigint,
    plugins: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): bigint;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_func_default_config(
    network: Uint8Array,
    breezApiKey: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_func_parse_invoice(
    input: Uint8Array,
    uniffi_out_err: UniffiRustCallStatus
  ): Uint8Array;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_func_set_logger(
    logger: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_func_connect(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_func_connect_with_signer(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_func_default_config(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_func_parse_invoice(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_func_set_logger(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_accept_payment_proposed_fees(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_add_event_listener(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_backup(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_buy_bitcoin(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_check_message(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_create_bolt12_invoice(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_disconnect(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_fiat_rates(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_lightning_limits(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_onchain_limits(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_fetch_payment_proposed_fees(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_get_info(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_get_payment(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_fiat_currencies(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_payments(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_list_refundables(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_auth(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_pay(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_lnurl_withdraw(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_parse(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_pay_onchain(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_buy_bitcoin(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_lnurl_pay(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_pay_onchain(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_receive_payment(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_refund(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_prepare_send_payment(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_receive_payment(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_recommended_fees(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_refund(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_register_webhook(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_remove_event_listener(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_rescan_onchain_swaps(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_restore(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_send_payment(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_sign_message(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_sync(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_bindingliquidsdk_unregister_webhook(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_plugineventemitter_broadcast(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_get_item(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_remove_item(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_pluginstorage_set_item(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_eventlistener_on_event(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_logger_log(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_id(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_on_start(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_plugin_on_stop(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_xpub(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_derive_xpub(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_sign_ecdsa(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_sign_ecdsa_recoverable(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_slip77_master_blinding_key(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_hmac_sha256(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_ecies_encrypt(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_checksum_method_signer_ecies_decrypt(): number;
  ubrn_ffi_breez_sdk_liquid_bindings_uniffi_contract_version(): number;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_eventlistener(
    vtable: UniffiVTableCallbackInterfaceEventListener
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_logger(
    vtable: UniffiVTableCallbackInterfaceLogger
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_plugin(
    vtable: UniffiVTableCallbackInterfacePlugin
  ): void;
  ubrn_uniffi_breez_sdk_liquid_bindings_fn_init_callback_vtable_signer(
    vtable: UniffiVTableCallbackInterfaceSigner
  ): void;
  ubrn_uniffi_internal_fn_method_bindingliquidsdk_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
  ubrn_uniffi_internal_fn_method_plugineventemitter_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
  ubrn_uniffi_internal_fn_method_pluginstorage_ffi__bless_pointer(
    pointer: bigint,
    uniffi_out_err: UniffiRustCallStatus
  ): UniffiRustArcPtr;
}

// Casting globalThis to any allows us to look for `NativeBreezSdkLiquid`
// if it was added via JSI.
//
// We use a getter here rather than simply `globalThis.NativeBreezSdkLiquid` so that
// if/when the startup sequence isn't just so, an empty value isn't inadvertantly cached.
const getter: () => NativeModuleInterface = () =>
  (globalThis as any).NativeBreezSdkLiquid;
export default getter;

// Structs and function types for calling back into Typescript from Rust.
export type UniffiRustFutureContinuationCallback = (
  data: bigint,
  pollResult: number
) => void;
type UniffiForeignFutureFree = (handle: bigint) => void;
type UniffiCallbackInterfaceFree = (handle: bigint) => void;
export type UniffiForeignFuture = {
  handle: bigint;
  free: UniffiForeignFutureFree;
};
export type UniffiForeignFutureStructU8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU8 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU8
) => void;
export type UniffiForeignFutureStructI8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI8 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI8
) => void;
export type UniffiForeignFutureStructU16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU16 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU16
) => void;
export type UniffiForeignFutureStructI16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI16 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI16
) => void;
export type UniffiForeignFutureStructU32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU32
) => void;
export type UniffiForeignFutureStructI32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI32
) => void;
export type UniffiForeignFutureStructU64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructU64
) => void;
export type UniffiForeignFutureStructI64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructI64
) => void;
export type UniffiForeignFutureStructF32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF32 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructF32
) => void;
export type UniffiForeignFutureStructF64 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF64 = (
  callbackData: bigint,
  result: UniffiForeignFutureStructF64
) => void;
export type UniffiForeignFutureStructPointer = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompletePointer = (
  callbackData: bigint,
  result: UniffiForeignFutureStructPointer
) => void;
export type UniffiForeignFutureStructRustBuffer = {
  returnValue: Uint8Array;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteRustBuffer = (
  callbackData: bigint,
  result: UniffiForeignFutureStructRustBuffer
) => void;
export type UniffiForeignFutureStructVoid = {
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteVoid = (
  callbackData: bigint,
  result: UniffiForeignFutureStructVoid
) => void;
type UniffiCallbackInterfaceEventListenerMethod0 = (
  uniffiHandle: bigint,
  e: Uint8Array
) => UniffiResult<void>;
type UniffiCallbackInterfaceLoggerMethod0 = (
  uniffiHandle: bigint,
  l: Uint8Array
) => UniffiResult<void>;
type UniffiCallbackInterfacePluginMethod0 = (
  uniffiHandle: bigint
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfacePluginMethod1 = (
  uniffiHandle: bigint,
  sdk: bigint,
  storage: bigint,
  eventEmitter: bigint
) => UniffiResult<void>;
type UniffiCallbackInterfacePluginMethod2 = (
  uniffiHandle: bigint
) => UniffiResult<void>;
type UniffiCallbackInterfaceSignerMethod0 = (
  uniffiHandle: bigint
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod1 = (
  uniffiHandle: bigint,
  derivationPath: Uint8Array
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod2 = (
  uniffiHandle: bigint,
  msg: Uint8Array,
  derivationPath: Uint8Array
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod3 = (
  uniffiHandle: bigint,
  msg: Uint8Array
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod4 = (
  uniffiHandle: bigint
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod5 = (
  uniffiHandle: bigint,
  msg: Uint8Array,
  derivationPath: Uint8Array
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod6 = (
  uniffiHandle: bigint,
  msg: Uint8Array
) => UniffiResult<Uint8Array>;
type UniffiCallbackInterfaceSignerMethod7 = (
  uniffiHandle: bigint,
  msg: Uint8Array
) => UniffiResult<Uint8Array>;
export type UniffiVTableCallbackInterfaceEventListener = {
  onEvent: UniffiCallbackInterfaceEventListenerMethod0;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfaceLogger = {
  log: UniffiCallbackInterfaceLoggerMethod0;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfacePlugin = {
  id: UniffiCallbackInterfacePluginMethod0;
  onStart: UniffiCallbackInterfacePluginMethod1;
  onStop: UniffiCallbackInterfacePluginMethod2;
  uniffiFree: UniffiCallbackInterfaceFree;
};
export type UniffiVTableCallbackInterfaceSigner = {
  xpub: UniffiCallbackInterfaceSignerMethod0;
  deriveXpub: UniffiCallbackInterfaceSignerMethod1;
  signEcdsa: UniffiCallbackInterfaceSignerMethod2;
  signEcdsaRecoverable: UniffiCallbackInterfaceSignerMethod3;
  slip77MasterBlindingKey: UniffiCallbackInterfaceSignerMethod4;
  hmacSha256: UniffiCallbackInterfaceSignerMethod5;
  eciesEncrypt: UniffiCallbackInterfaceSignerMethod6;
  eciesDecrypt: UniffiCallbackInterfaceSignerMethod7;
  uniffiFree: UniffiCallbackInterfaceFree;
};

// UniffiRustFutureContinuationCallback is generated as part of the component interface's
// ffi_definitions. However, we need it in the runtime.
// We could:
// (a) do some complicated template logic to ensure the declaration is not generated here (possible)
// (b) import the generated declaration into the runtime (m a y b e) or…
// (c) generate the declaration anyway, and use a different declaration in the runtime.
//
// We chose (c) here as the simplest. In addition, we perform a compile time check that
// the two versions of `UniffiRustFutureContinuationCallback` are structurally equivalent.
//
// If you see the error:
// ```
// Type 'true' is not assignable to type 'false'.(2322)
// ```
// Then a new version of uniffi has changed the signature of the callback. Most likely, code in
// `typescript/src/async-rust-call.ts` will need to be changed.
//
// If you see the error:
// ```
// Cannot find name 'UniffiRustFutureContinuationCallback'. Did you mean 'RuntimeUniffiRustFutureContinuationCallback'?(2552)
// ```
// then you may not be using callbacks or promises, and uniffi is now not generating Futures and callbacks.
// You should not generate this if that is the case.
//
// ('You' being the bindings generator maintainer).
const isRustFutureContinuationCallbackTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiRustFutureContinuationCallback,
  UniffiRustFutureContinuationCallback
> = true;
const isUniffiForeignFutureTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiForeignFuture,
  UniffiForeignFuture
> = true;
